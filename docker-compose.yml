services:
  elasticsearch:
    image: elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:9200 >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - esdata:/usr/share/elasticsearch/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1g

  app:
    build:
      context: .
      target: runtime
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - DISPLAY=${DISPLAY:-:0}
      - UV_LINK_MODE=copy
      - UV_NO_PROGRESS=1
      - QT_LOGGING_RULES=qt.qpa.*=false
    volumes:
      - ./documents:/opt/project/documents:rw
      - ./config:/opt/project/config:rw
      - ./logs:/opt/project/logs:rw
      - ./src:/opt/project/src:ro
      - ./tests:/opt/project/tests:ro
      - ./pyproject.toml:/opt/project/pyproject.toml:ro
      - ./uv.lock:/opt/project/uv.lock:ro
      # X11 forwarding for GUI
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${HOME}/.Xauthority:/root/.Xauthority:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 10g
    working_dir: /opt/project
    stdin_open: true
    tty: true
    network_mode: host
    command: ["/bin/sh", "-lc", "uv pip install -p /usr/local/bin/python3 -r requirements.txt || true; PYTHONPATH=/opt/project uv run python src/main.py"]

  api:
    build:
      context: .
      target: runtime
    working_dir: /opt/project
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - UV_LINK_MODE=copy
      - UV_NO_PROGRESS=1
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./src:/opt/project/src:ro
      - ./requirements.txt:/opt/project/requirements.txt:ro
      - ./pyproject.toml:/opt/project/pyproject.toml:ro
      - ./uv.lock:/opt/project/uv.lock:ro
    ports:
      - "8000:8000"
    command: ["/bin/sh", "-lc", "uv pip install -p /usr/local/bin/python3 -r requirements.txt && uv run uvicorn src.api.main:app --host 0.0.0.0 --port 8000"]

  frontend:
    image: node:20-alpine
    working_dir: /opt/project/frontend
    volumes:
      - ./frontend:/opt/project/frontend
    ports:
      - "5173:5173"
    command: sh -lc "npm install && npm run dev"
    environment:
      - NODE_ENV=development
    depends_on:
      - api

volumes:
  esdata:
